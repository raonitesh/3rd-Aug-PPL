trigger:
  branches:
    include:
      - feature/*
      - main

pool: 'UAT-Pipeline-Agents'

variables:
  nitesh_path: 'D:\\git_revision\\3rd-Aug-PPL'
  service_connection: 'nits-federated-app1'

stages:

# ---------------- Stage 1: Validation (Init + Validate + Plan) ----------------
- stage: ValidateAndPlan
  displayName: "Terraform Validate & Plan"
  jobs:
  - job: TerraformJob
    displayName: "Terraform Init, Validate, Plan"
    pool: 'UAT-Pipeline-Agents'
    steps:
    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'D:\\git_revision\\3rd-Aug-PPL'
        backendServiceArm: 'nits-federated-app1'
        backendAzureRmStorageAccountName: 'nitsstg2'
        backendAzureRmContainerName: 'niteshcontainer1'
        backendAzureRmKey: 'dd.tfstate'

    - task: TerraformTask@5
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(nitesh_path)'

    - task: TerraformTask@5
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(nitesh_path)'
        environmentServiceNameAzureRM: '$(service_connection)'

# ---------------- Stage 2: Approval ----------------
- stage: Approval
  displayName: "Manual Approval before Apply"
  dependsOn: ValidateAndPlan
  condition: succeeded()
  jobs:
  - job: WaitForValidation
    displayName: "Manual Validation"
    pool: server
    steps:
    - task: ManualValidation@0
      inputs:
        instructions: 'Please review the Terraform plan and approve before Apply.'
        onTimeout: 'reject'   # timeout होने पर reject
        timeoutInMinutes: 60  # 60 min तक wait करेगा

# ---------------- Stage 3: Apply (only main branch) ----------------
- stage: Apply
  displayName: "Terraform Apply"
  dependsOn: Approval
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: TerraformApplyJob
    displayName: "Terraform Apply"
    pool: 'UAT-Pipeline-Agents'
    steps:
    - task: TerraformTask@5
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(nitesh_path)'
        environmentServiceNameAzureRM: '$(service_connection)'
