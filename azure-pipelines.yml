trigger:
 branches:
   include:
     - feather/*
     - main

pool: 'UAT-Pipeline-Agents'

variables:
  nitesh_path: 'D:\\git_revision\\3rd-Aug-PPL'
  service_connection: 'nits-federated-app1'

steps:
- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: 'latest'

- task: TerraformTask@5
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: 'D:\\git_revision\\3rd-Aug-PPL'
    backendServiceArm: 'nits-federated-app1'
    backendAzureRmStorageAccountName: 'nitsstg2'
    backendAzureRmContainerName: 'niteshcontainer1'
    backendAzureRmKey: 'remote.tfstate'

- task: TerraformTask@5
  displayName: 'Terraform validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: 'D:\\git_revision\\3rd-Aug-PPL'

- task: TerraformTask@5
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: 'D:\\git_revision\\3rd-Aug-PPL'
    environmentServiceNameAzureRM: 'nits-federated-app1'

# Apply only allowed for main branch not feature from feature branch.
- task: TerraformTask@5
  displayName: 'Terraform Apply'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: 'D:\\git_revision\\3rd-Aug-PPL'
    environmentServiceNameAzureRM: 'nits-federated-app1'